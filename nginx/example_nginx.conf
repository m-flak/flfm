# SAMPLE CONFIGURATION
# the following config is for multiple flask apps on a server
# if you're running flfm from the root or where ever
# adjust accordingly

upstream socketio_upstream {
	ip_hash;
	keepalive 128;
	server 127.0.0.1:9197;
}

server {
	listen 80;
	listen [::]:80;

	server_name <UR_DOMAIN>;
	server_name www.<UR_DOMAIN>;

	return 301 https://$host$request_uri;
}
server {
	listen 443 default_server ssl;

	server_name <UR_DOMAIN> www.<UR_DOMAIN>;

	ssl_certificate /etc/letsencrypt/live/<UR_DOMAIN>/fullchain.pem;
	ssl_certificate_key /etc/letsencrypt/live/<UR_DOMAIN>/privkey.pem;
	ssl_protocols TLSv1 TLSv1.1 TLSv1.2;
	ssl_dhparam /etc/nginx/cert/dhparam.pem;
	ssl_prefer_server_ciphers on;
	ssl_ciphers 'EECDH+AESGCM:EDH+AESGCM:AES256+EECDH:AES256+EDH';

	# ARE YOU GETTING HTTP413?
	# FLASK BY DEFAULT HAS NO LIMIT, BUT NGINX DOES...
	client_max_body_size 100M;

	location ^~ /flfm {
		proxy_pass http://127.0.0.1:9197/flfm;
		proxy_redirect off;
		proxy_set_header Host $host;
		proxy_set_header X-Real-IP $remote_addr;
		proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
		proxy_set_header X-Forwarded-Proto $scheme;
	}

    location /socket.io {
        include proxy_params;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "Upgrade";
        proxy_pass http://socketio_upstream/socket.io;
    }
	location / {
		proxy_pass http://127.0.0.1:9001/;
		proxy_redirect off;
		proxy_set_header Host $host;
		proxy_set_header X-Real-IP $remote_addr;
		proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
		proxy_set_header X-Forwarded-Proto $scheme;
	}
	location /static {
		alias /var/www/static;
	}

	location /videos/ {
		alias /var/cache/videos/;
		mp4;
		mp4_buffer_size 2M;
		mp4_max_buffer_size 10M;
	}
}
